
@model CMS_DTO.CMS_DepositPackageModel
@using CMS_Shared
@{
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.Id;
}
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.RateUSD)
<div class="row form-horizontal form-label-left" style="margin-bottom:15px;">
    @*Image*@
    <fieldset>
        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 fontLighter">Package Name</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.PackageName, new { @class = "form-control", @placeholder = "Package Name", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.PackageName, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Package Credits</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.PackageSMS, new { @class = "form-control", @placeholder = "Package SMS", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.PackageSMS, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Rate SMS (vnd)</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.RateSMS, new { @class = "form-control", @disabled = "disabled", @placeholder = "Package SMS", @autocomplete = "off", })
                @Html.ValidationMessageFor(model => model.RateSMS, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Package Price</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.PackagePrice, new { @class = "form-control", @placeholder = "Package Price", @disabled = "disabled", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.PackagePrice, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Discount</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Discount, new { @class = "form-control", @placeholder = "Discount", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Discount, null, new { @class = "label label-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Package Price affter Discount(vnd) </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBox("PackagePriceDiscountVnd", "", new { @class = "form-control", @placeholder = "Package Price Affter Discount(vnd)", @autocomplete = "off", @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Package Price affter Discount(usd) </label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBox("PackagePriceDiscountUsd", "", new { @class = "form-control", @placeholder = "Package Price Affter Discount(usd)", @autocomplete = "off", @disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">SMS Price</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.SMSPrice, new { @class = "form-control", @placeholder = "SMSPrice", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.SMSPrice, null, new { @class = "label label-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 fontLighter">Status</label>
            <div class="col-md-1 col-sm-1 col-xs-12">
                <label>@Html.CheckBoxFor(model => model.IsActive, new { @class = "icheck" })</label>
            </div>
        </div>
        <div>
            @Html.HiddenFor(model => model.RateSMS)
        </div>
    </fieldset>
</div>
<script src="@Url.Content("~/Scripts/InputCustom.js")"></script>
<script type="text/javascript">
    var id = $("#Id").val();
    if (id != "") {
        $("#PackagePrice").val(calPackagePrice());
        $("#PackagePriceDiscountVnd").val(calPackagePriceDiscountVnd());
        $("#PackagePriceDiscountUsd").val(calPackagePriceDiscountUsd());
        $("#SMSPrice").val(calSMSPrice());
    }
    $("#PackageSMS").on("change", function () {
        var packageSMS = parseFloat($(this).val());
        if ($.isNumeric(packageSMS)) {
            $("#PackagePrice").val(calPackagePrice());
            $("#PackagePriceDiscountVnd").val(calPackagePriceDiscountVnd());
            $("#PackagePriceDiscountUsd").val(calPackagePriceDiscountUsd());
        }
    })
    $("#Discount").on("change", function () {
        var packageSMS = parseFloat($(this).val());
        if ($.isNumeric(packageSMS)) {
            $("#PackagePriceDiscountVnd").val(calPackagePriceDiscountVnd());
            $("#PackagePriceDiscountUsd").val(calPackagePriceDiscountUsd());
            $("#SMSPrice").val(calSMSPrice());
        }
    })
    function calPackagePrice() {
        var smsRate = parseFloat($("#RateSMS").val());
        var packageSMS = parseFloat($("#PackageSMS").val());
        return smsRate * packageSMS;
    }
    function calPackagePriceDiscountVnd() {
        var PackagePrice = parseFloat($("#PackagePrice").val());
        var smsRate = parseFloat($("#RateSMS").val());
        var packageSMS = parseFloat($("#PackageSMS").val());
        var discount = parseFloat($("#Discount").val());
        var rateUsd = parseFloat($("#RateUSD").val());
        return (((smsRate * packageSMS) - (smsRate * packageSMS * discount / 100))*1000).toFixed(2);
    }
    function calPackagePriceDiscountUsd() {
        var PackagePrice = parseFloat($("#PackagePrice").val());
        var smsRate = parseFloat($("#RateSMS").val());
        var packageSMS = parseFloat($("#PackageSMS").val());
        var discount = parseFloat($("#Discount").val());
        var rateUsd = parseFloat($("#RateUSD").val());
        return ((((smsRate * packageSMS) - (smsRate * packageSMS * discount / 100)) / rateUsd)*1000).toFixed(2);
    }
    function calSMSPrice() {
        var smsRate = parseFloat($("#RateSMS").val());
        var discount = parseFloat($("#Discount").val());
        return (smsRate - (discount * discount / 100)).toFixed(2);
    }
</script>
